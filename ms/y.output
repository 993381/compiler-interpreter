Terminals unused in grammar

   VAR
   ELIF
   ELSE


语法

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 function_definition: FUNCTION IDENTIFIER LP arglist RP block
    6                    | FUNCTION IDENTIFIER LP RP block

    7 statement: expression_statement
    8          | global_declaration
    9          | for_statement
   10          | if_statement
   11          | break_statement
   12          | continue_statement
   13          | return_statement

   14 expression_statement: expression SEMICOLON

   15 expression: value_expression
   16           | IDENTIFIER ASSIGN expression

   17 value_expression: compare_expression
   18                 | value_expression EQ compare_expression
   19                 | value_expression NE compare_expression

   20 compare_expression: add_sub_expression
   21                   | compare_expression GT add_sub_expression
   22                   | compare_expression GE add_sub_expression
   23                   | compare_expression LT add_sub_expression
   24                   | compare_expression LE add_sub_expression

   25 add_sub_expression: mul_div_expression
   26                   | add_sub_expression ADD mul_div_expression
   27                   | add_sub_expression SUB mul_div_expression

   28 mul_div_expression: primary_expression
   29                   | mul_div_expression DIV primary_expression
   30                   | mul_div_expression MUL primary_expression

   31 primary_expression: SUB primary_expression
   32                   | LP expression RP
   33                   | IDENTIFIER
   34                   | STRING_LITERAL
   35                   | INT_LITERAL
   36                   | DOUBLE_LITERAL
   37                   | IDENTIFIER LP RP
   38                   | IDENTIFIER LP arglist RP

   39 statement_list: statement_list statement
   40               | statement

   41 block: LC RC
   42      | LC statement_list RC

   43 arglist: arglist COMMA arg
   44        | arg

   45 arg: IDENTIFIER

   46 expression_option: %empty
   47                  | expression

   48 for_statement: FOR LP expression_option SEMICOLON expression_option SEMICOLON expression_option RP block

   49 if_statement: IF LP expression RP block

   50 break_statement: BREAK SEMICOLON

   51 continue_statement: CONTINUE SEMICOLON

   52 return_statement: RETURN IDENTIFIER

   53 global_declaration: GLOBAL IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 35
DOUBLE_LITERAL (259) 36
VAR (260)
FUNCTION (261) 5 6
GLOBAL (262) 53
FOR (263) 48
IF (264) 49
ELIF (265)
ELSE (266)
ADD (267) 26
SUB (268) 27 31
MUL (269) 30
DIV (270) 29
ASSIGN (271) 16
EQ (272) 18
NE (273) 19
GT (274) 21
GE (275) 22
LT (276) 23
LE (277) 24
LP (278) 5 6 32 37 38 48 49
RP (279) 5 6 32 37 38 48 49
LC (280) 41 42
RC (281) 41 42
SEMICOLON (282) 14 48 50 51
IDENTIFIER (283) 5 6 16 33 37 38 45 52 53
BREAK (284) 50
CONTINUE (285) 51
RETURN (286) 52
COMMA (287) 43
STRING_LITERAL (288) 34


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
translation_unit (35)
    on left: 1 2, on right: 0 2
definition_or_statement (36)
    on left: 3 4, on right: 1 2
function_definition (37)
    on left: 5 6, on right: 3
statement (38)
    on left: 7 8 9 10 11 12 13, on right: 4 39 40
expression_statement (39)
    on left: 14, on right: 7
expression (40)
    on left: 15 16, on right: 14 16 32 47 49
value_expression (41)
    on left: 17 18 19, on right: 15 18 19
compare_expression (42)
    on left: 20 21 22 23 24, on right: 17 18 19 21 22 23 24
add_sub_expression (43)
    on left: 25 26 27, on right: 20 21 22 23 24 26 27
mul_div_expression (44)
    on left: 28 29 30, on right: 25 26 27 29 30
primary_expression (45)
    on left: 31 32 33 34 35 36 37 38, on right: 28 29 30 31
statement_list (46)
    on left: 39 40, on right: 39 42
block (47)
    on left: 41 42, on right: 5 6 48 49
arglist (48)
    on left: 43 44, on right: 5 38 43
arg (49)
    on left: 45, on right: 43 44
expression_option (50)
    on left: 46 47, on right: 48
for_statement (51)
    on left: 48, on right: 9
if_statement (52)
    on left: 49, on right: 10
break_statement (53)
    on left: 50, on right: 11
continue_statement (54)
    on left: 51, on right: 12
return_statement (55)
    on left: 52, on right: 13
global_declaration (56)
    on left: 53, on right: 8


State 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    FUNCTION        shift, and go to state 3
    GLOBAL          shift, and go to state 4
    FOR             shift, and go to state 5
    IF              shift, and go to state 6
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    RETURN          shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13

    translation_unit         转到状态 14
    definition_or_statement  转到状态 15
    function_definition      转到状态 16
    statement                转到状态 17
    expression_statement     转到状态 18
    expression               转到状态 19
    value_expression         转到状态 20
    compare_expression       转到状态 21
    add_sub_expression       转到状态 22
    mul_div_expression       转到状态 23
    primary_expression       转到状态 24
    for_statement            转到状态 25
    if_statement             转到状态 26
    break_statement          转到状态 27
    continue_statement       转到状态 28
    return_statement         转到状态 29
    global_declaration       转到状态 30


State 1

   35 primary_expression: INT_LITERAL .

    $default  reduce using rule 35 (primary_expression)


State 2

   36 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 36 (primary_expression)


State 3

    5 function_definition: FUNCTION . IDENTIFIER LP arglist RP block
    6                    | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 31


State 4

   53 global_declaration: GLOBAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 5

   48 for_statement: FOR . LP expression_option SEMICOLON expression_option SEMICOLON expression_option RP block

    LP  shift, and go to state 33


State 6

   49 if_statement: IF . LP expression RP block

    LP  shift, and go to state 34


State 7

   31 primary_expression: SUB . primary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    primary_expression  转到状态 36


State 8

   32 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    STRING_LITERAL  shift, and go to state 13

    expression          转到状态 37
    value_expression    转到状态 20
    compare_expression  转到状态 21
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 9

   16 expression: IDENTIFIER . ASSIGN expression
   33 primary_expression: IDENTIFIER .
   37                   | IDENTIFIER . LP RP
   38                   | IDENTIFIER . LP arglist RP

    ASSIGN  shift, and go to state 38
    LP      shift, and go to state 39

    $default  reduce using rule 33 (primary_expression)


State 10

   50 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 11

   51 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 12

   52 return_statement: RETURN . IDENTIFIER

    IDENTIFIER  shift, and go to state 42


State 13

   34 primary_expression: STRING_LITERAL .

    $default  reduce using rule 34 (primary_expression)


State 14

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 43
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    FUNCTION        shift, and go to state 3
    GLOBAL          shift, and go to state 4
    FOR             shift, and go to state 5
    IF              shift, and go to state 6
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    RETURN          shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13

    definition_or_statement  转到状态 44
    function_definition      转到状态 16
    statement                转到状态 17
    expression_statement     转到状态 18
    expression               转到状态 19
    value_expression         转到状态 20
    compare_expression       转到状态 21
    add_sub_expression       转到状态 22
    mul_div_expression       转到状态 23
    primary_expression       转到状态 24
    for_statement            转到状态 25
    if_statement             转到状态 26
    break_statement          转到状态 27
    continue_statement       转到状态 28
    return_statement         转到状态 29
    global_declaration       转到状态 30


State 15

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


State 16

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


State 17

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


State 18

    7 statement: expression_statement .

    $default  reduce using rule 7 (statement)


State 19

   14 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 20

   15 expression: value_expression .
   18 value_expression: value_expression . EQ compare_expression
   19                 | value_expression . NE compare_expression

    EQ  shift, and go to state 46
    NE  shift, and go to state 47

    $default  reduce using rule 15 (expression)


State 21

   17 value_expression: compare_expression .
   21 compare_expression: compare_expression . GT add_sub_expression
   22                   | compare_expression . GE add_sub_expression
   23                   | compare_expression . LT add_sub_expression
   24                   | compare_expression . LE add_sub_expression

    GT  shift, and go to state 48
    GE  shift, and go to state 49
    LT  shift, and go to state 50
    LE  shift, and go to state 51

    $default  reduce using rule 17 (value_expression)


State 22

   20 compare_expression: add_sub_expression .
   26 add_sub_expression: add_sub_expression . ADD mul_div_expression
   27                   | add_sub_expression . SUB mul_div_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 20 (compare_expression)


State 23

   25 add_sub_expression: mul_div_expression .
   29 mul_div_expression: mul_div_expression . DIV primary_expression
   30                   | mul_div_expression . MUL primary_expression

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55

    $default  reduce using rule 25 (add_sub_expression)


State 24

   28 mul_div_expression: primary_expression .

    $default  reduce using rule 28 (mul_div_expression)


State 25

    9 statement: for_statement .

    $default  reduce using rule 9 (statement)


State 26

   10 statement: if_statement .

    $default  reduce using rule 10 (statement)


State 27

   11 statement: break_statement .

    $default  reduce using rule 11 (statement)


State 28

   12 statement: continue_statement .

    $default  reduce using rule 12 (statement)


State 29

   13 statement: return_statement .

    $default  reduce using rule 13 (statement)


State 30

    8 statement: global_declaration .

    $default  reduce using rule 8 (statement)


State 31

    5 function_definition: FUNCTION IDENTIFIER . LP arglist RP block
    6                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 56


State 32

   53 global_declaration: GLOBAL IDENTIFIER .

    $default  reduce using rule 53 (global_declaration)


State 33

   48 for_statement: FOR LP . expression_option SEMICOLON expression_option SEMICOLON expression_option RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    STRING_LITERAL  shift, and go to state 13

    $default  reduce using rule 46 (expression_option)

    expression          转到状态 57
    value_expression    转到状态 20
    compare_expression  转到状态 21
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24
    expression_option   转到状态 58


State 34

   49 if_statement: IF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    STRING_LITERAL  shift, and go to state 13

    expression          转到状态 59
    value_expression    转到状态 20
    compare_expression  转到状态 21
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 35

   33 primary_expression: IDENTIFIER .
   37                   | IDENTIFIER . LP RP
   38                   | IDENTIFIER . LP arglist RP

    LP  shift, and go to state 39

    $default  reduce using rule 33 (primary_expression)


State 36

   31 primary_expression: SUB primary_expression .

    $default  reduce using rule 31 (primary_expression)


State 37

   32 primary_expression: LP expression . RP

    RP  shift, and go to state 60


State 38

   16 expression: IDENTIFIER ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    STRING_LITERAL  shift, and go to state 13

    expression          转到状态 61
    value_expression    转到状态 20
    compare_expression  转到状态 21
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 39

   37 primary_expression: IDENTIFIER LP . RP
   38                   | IDENTIFIER LP . arglist RP

    RP          shift, and go to state 62
    IDENTIFIER  shift, and go to state 63

    arglist  转到状态 64
    arg      转到状态 65


State 40

   50 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 50 (break_statement)


State 41

   51 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 51 (continue_statement)


State 42

   52 return_statement: RETURN IDENTIFIER .

    $default  reduce using rule 52 (return_statement)


State 43

    0 $accept: translation_unit $end .

    $default  接受


State 44

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


State 45

   14 expression_statement: expression SEMICOLON .

    $default  reduce using rule 14 (expression_statement)


State 46

   18 value_expression: value_expression EQ . compare_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    compare_expression  转到状态 66
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 47

   19 value_expression: value_expression NE . compare_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    compare_expression  转到状态 67
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 48

   21 compare_expression: compare_expression GT . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    add_sub_expression  转到状态 68
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 49

   22 compare_expression: compare_expression GE . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    add_sub_expression  转到状态 69
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 50

   23 compare_expression: compare_expression LT . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    add_sub_expression  转到状态 70
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 51

   24 compare_expression: compare_expression LE . add_sub_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    add_sub_expression  转到状态 71
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24


State 52

   26 add_sub_expression: add_sub_expression ADD . mul_div_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    mul_div_expression  转到状态 72
    primary_expression  转到状态 24


State 53

   27 add_sub_expression: add_sub_expression SUB . mul_div_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    mul_div_expression  转到状态 73
    primary_expression  转到状态 24


State 54

   30 mul_div_expression: mul_div_expression MUL . primary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    primary_expression  转到状态 74


State 55

   29 mul_div_expression: mul_div_expression DIV . primary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 13

    primary_expression  转到状态 75


State 56

    5 function_definition: FUNCTION IDENTIFIER LP . arglist RP block
    6                    | FUNCTION IDENTIFIER LP . RP block

    RP          shift, and go to state 76
    IDENTIFIER  shift, and go to state 63

    arglist  转到状态 77
    arg      转到状态 65


State 57

   47 expression_option: expression .

    $default  reduce using rule 47 (expression_option)


State 58

   48 for_statement: FOR LP expression_option . SEMICOLON expression_option SEMICOLON expression_option RP block

    SEMICOLON  shift, and go to state 78


State 59

   49 if_statement: IF LP expression . RP block

    RP  shift, and go to state 79


State 60

   32 primary_expression: LP expression RP .

    $default  reduce using rule 32 (primary_expression)


State 61

   16 expression: IDENTIFIER ASSIGN expression .

    $default  reduce using rule 16 (expression)


State 62

   37 primary_expression: IDENTIFIER LP RP .

    $default  reduce using rule 37 (primary_expression)


State 63

   45 arg: IDENTIFIER .

    $default  reduce using rule 45 (arg)


State 64

   38 primary_expression: IDENTIFIER LP arglist . RP
   43 arglist: arglist . COMMA arg

    RP     shift, and go to state 80
    COMMA  shift, and go to state 81


State 65

   44 arglist: arg .

    $default  reduce using rule 44 (arglist)


State 66

   18 value_expression: value_expression EQ compare_expression .
   21 compare_expression: compare_expression . GT add_sub_expression
   22                   | compare_expression . GE add_sub_expression
   23                   | compare_expression . LT add_sub_expression
   24                   | compare_expression . LE add_sub_expression

    GT  shift, and go to state 48
    GE  shift, and go to state 49
    LT  shift, and go to state 50
    LE  shift, and go to state 51

    $default  reduce using rule 18 (value_expression)


State 67

   19 value_expression: value_expression NE compare_expression .
   21 compare_expression: compare_expression . GT add_sub_expression
   22                   | compare_expression . GE add_sub_expression
   23                   | compare_expression . LT add_sub_expression
   24                   | compare_expression . LE add_sub_expression

    GT  shift, and go to state 48
    GE  shift, and go to state 49
    LT  shift, and go to state 50
    LE  shift, and go to state 51

    $default  reduce using rule 19 (value_expression)


State 68

   21 compare_expression: compare_expression GT add_sub_expression .
   26 add_sub_expression: add_sub_expression . ADD mul_div_expression
   27                   | add_sub_expression . SUB mul_div_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 21 (compare_expression)


State 69

   22 compare_expression: compare_expression GE add_sub_expression .
   26 add_sub_expression: add_sub_expression . ADD mul_div_expression
   27                   | add_sub_expression . SUB mul_div_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 22 (compare_expression)


State 70

   23 compare_expression: compare_expression LT add_sub_expression .
   26 add_sub_expression: add_sub_expression . ADD mul_div_expression
   27                   | add_sub_expression . SUB mul_div_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 23 (compare_expression)


State 71

   24 compare_expression: compare_expression LE add_sub_expression .
   26 add_sub_expression: add_sub_expression . ADD mul_div_expression
   27                   | add_sub_expression . SUB mul_div_expression

    ADD  shift, and go to state 52
    SUB  shift, and go to state 53

    $default  reduce using rule 24 (compare_expression)


State 72

   26 add_sub_expression: add_sub_expression ADD mul_div_expression .
   29 mul_div_expression: mul_div_expression . DIV primary_expression
   30                   | mul_div_expression . MUL primary_expression

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55

    $default  reduce using rule 26 (add_sub_expression)


State 73

   27 add_sub_expression: add_sub_expression SUB mul_div_expression .
   29 mul_div_expression: mul_div_expression . DIV primary_expression
   30                   | mul_div_expression . MUL primary_expression

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55

    $default  reduce using rule 27 (add_sub_expression)


State 74

   30 mul_div_expression: mul_div_expression MUL primary_expression .

    $default  reduce using rule 30 (mul_div_expression)


State 75

   29 mul_div_expression: mul_div_expression DIV primary_expression .

    $default  reduce using rule 29 (mul_div_expression)


State 76

    6 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 82

    block  转到状态 83


State 77

    5 function_definition: FUNCTION IDENTIFIER LP arglist . RP block
   43 arglist: arglist . COMMA arg

    RP     shift, and go to state 84
    COMMA  shift, and go to state 81


State 78

   48 for_statement: FOR LP expression_option SEMICOLON . expression_option SEMICOLON expression_option RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    STRING_LITERAL  shift, and go to state 13

    $default  reduce using rule 46 (expression_option)

    expression          转到状态 57
    value_expression    转到状态 20
    compare_expression  转到状态 21
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24
    expression_option   转到状态 85


State 79

   49 if_statement: IF LP expression RP . block

    LC  shift, and go to state 82

    block  转到状态 86


State 80

   38 primary_expression: IDENTIFIER LP arglist RP .

    $default  reduce using rule 38 (primary_expression)


State 81

   43 arglist: arglist COMMA . arg

    IDENTIFIER  shift, and go to state 63

    arg  转到状态 87


State 82

   41 block: LC . RC
   42      | LC . statement_list RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    GLOBAL          shift, and go to state 4
    FOR             shift, and go to state 5
    IF              shift, and go to state 6
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    RC              shift, and go to state 88
    IDENTIFIER      shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    RETURN          shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13

    statement             转到状态 89
    expression_statement  转到状态 18
    expression            转到状态 19
    value_expression      转到状态 20
    compare_expression    转到状态 21
    add_sub_expression    转到状态 22
    mul_div_expression    转到状态 23
    primary_expression    转到状态 24
    statement_list        转到状态 90
    for_statement         转到状态 25
    if_statement          转到状态 26
    break_statement       转到状态 27
    continue_statement    转到状态 28
    return_statement      转到状态 29
    global_declaration    转到状态 30


State 83

    6 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_definition)


State 84

    5 function_definition: FUNCTION IDENTIFIER LP arglist RP . block

    LC  shift, and go to state 82

    block  转到状态 91


State 85

   48 for_statement: FOR LP expression_option SEMICOLON expression_option . SEMICOLON expression_option RP block

    SEMICOLON  shift, and go to state 92


State 86

   49 if_statement: IF LP expression RP block .

    $default  reduce using rule 49 (if_statement)


State 87

   43 arglist: arglist COMMA arg .

    $default  reduce using rule 43 (arglist)


State 88

   41 block: LC RC .

    $default  reduce using rule 41 (block)


State 89

   40 statement_list: statement .

    $default  reduce using rule 40 (statement_list)


State 90

   39 statement_list: statement_list . statement
   42 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    GLOBAL          shift, and go to state 4
    FOR             shift, and go to state 5
    IF              shift, and go to state 6
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    RC              shift, and go to state 93
    IDENTIFIER      shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    RETURN          shift, and go to state 12
    STRING_LITERAL  shift, and go to state 13

    statement             转到状态 94
    expression_statement  转到状态 18
    expression            转到状态 19
    value_expression      转到状态 20
    compare_expression    转到状态 21
    add_sub_expression    转到状态 22
    mul_div_expression    转到状态 23
    primary_expression    转到状态 24
    for_statement         转到状态 25
    if_statement          转到状态 26
    break_statement       转到状态 27
    continue_statement    转到状态 28
    return_statement      转到状态 29
    global_declaration    转到状态 30


State 91

    5 function_definition: FUNCTION IDENTIFIER LP arglist RP block .

    $default  reduce using rule 5 (function_definition)


State 92

   48 for_statement: FOR LP expression_option SEMICOLON expression_option SEMICOLON . expression_option RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    SUB             shift, and go to state 7
    LP              shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    STRING_LITERAL  shift, and go to state 13

    $default  reduce using rule 46 (expression_option)

    expression          转到状态 57
    value_expression    转到状态 20
    compare_expression  转到状态 21
    add_sub_expression  转到状态 22
    mul_div_expression  转到状态 23
    primary_expression  转到状态 24
    expression_option   转到状态 95


State 93

   42 block: LC statement_list RC .

    $default  reduce using rule 42 (block)


State 94

   39 statement_list: statement_list statement .

    $default  reduce using rule 39 (statement_list)


State 95

   48 for_statement: FOR LP expression_option SEMICOLON expression_option SEMICOLON expression_option . RP block

    RP  shift, and go to state 96


State 96

   48 for_statement: FOR LP expression_option SEMICOLON expression_option SEMICOLON expression_option RP . block

    LC  shift, and go to state 82

    block  转到状态 97


State 97

   48 for_statement: FOR LP expression_option SEMICOLON expression_option SEMICOLON expression_option RP block .

    $default  reduce using rule 48 (for_statement)
